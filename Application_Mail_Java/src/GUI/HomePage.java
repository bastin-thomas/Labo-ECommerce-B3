/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import JMailLib.MailClient;
import JMailLib.UtilityLib;
import java.util.Iterator;
import java.util.Vector;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.NoSuchProviderException;
import JMailLib.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author student
 */
public class HomePage extends javax.swing.JFrame {
    private MailClient mail;
    private Message[] msg;
    private ThreadMail clock;
    
    /**
     * Creates new form GUI
     */
    public HomePage(MailClient m) throws MessagingException {
        initComponents();
        mail = m;        
        clock = new ThreadMail(this, 5);
    }
    
    public void StartThreadRefresh(){
        clock.start();
    }
    
    public void onRefreshMail(){        
        try {
            Vector<String> test = new Vector<String>();
            
            msg = mail.GetListMail();
            System.out.println("Refresh Mails: " + msg.length);
            
            Iterator i= UtilityLib.GetHeadSender(msg).iterator();
                        
            DefaultTableModel dataModel = (DefaultTableModel) Mail_Selector.getModel();
            dataModel.setRowCount(0);
            
            while(i.hasNext()){
                Vector rowData =(Vector) i.next();
                dataModel.addRow(rowData);
            }
            
            Mail_Selector.setModel(dataModel);
        } catch (MessagingException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Erreur: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Mail_Selector = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Open_Mail = new javax.swing.JButton();
        New_Mail = new javax.swing.JButton();
        Respond_Mail = new javax.swing.JButton();
        Quit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mail Agent");

        Mail_Selector.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Waiting...", "Waiting..."}
            },
            new String [] {
                "Expéditeur", "Objet"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Mail_Selector.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(Mail_Selector);
        if (Mail_Selector.getColumnModel().getColumnCount() > 0) {
            Mail_Selector.getColumnModel().getColumn(0).setMinWidth(200);
            Mail_Selector.getColumnModel().getColumn(0).setPreferredWidth(200);
            Mail_Selector.getColumnModel().getColumn(0).setMaxWidth(350);
            Mail_Selector.getColumnModel().getColumn(1).setPreferredWidth(750);
        }

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Message Entrant:");

        Open_Mail.setText("Ouvrir");
        Open_Mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Open_MailActionPerformed(evt);
            }
        });

        New_Mail.setText("Nouveau");
        New_Mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_MailActionPerformed(evt);
            }
        });

        Respond_Mail.setText("Répondre");
        Respond_Mail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Respond_MailActionPerformed(evt);
            }
        });

        Quit.setText("Logout");
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Quit, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Respond_Mail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Open_Mail, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(New_Mail, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(New_Mail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Respond_Mail)
                        .addGap(8, 8, 8)
                        .addComponent(Open_Mail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Quit))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
        try {
            mail.Close();
        } catch (MessagingException ex) {
            JOptionPane.showMessageDialog(this, "Erreur: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        login n = new login();
        n.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_QuitActionPerformed

    private void Open_MailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Open_MailActionPerformed
        int index;
        if((index = Mail_Selector.getSelectedRow()) == -1){
            JOptionPane.showMessageDialog(this, "Erreur: " + "Vous n'avez pas sélectionné de mail a ouvrir", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        OpenMail window = null;
        
        try {
            if(msg == null){ return; }
            window = new OpenMail(msg[index]);
        } catch (MessagingException | IOException ex) {
            JOptionPane.showMessageDialog(this, "Erreur: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        window.setVisible(true);
    }//GEN-LAST:event_Open_MailActionPerformed

    private void New_MailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_MailActionPerformed
        NewMail window;
        try {
            window = new NewMail(mail);
        } catch (MessagingException ex) {
            JOptionPane.showMessageDialog(this, "Erreur: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        window.setVisible(true);
    }//GEN-LAST:event_New_MailActionPerformed

    private void Respond_MailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Respond_MailActionPerformed
        //ToDo
    }//GEN-LAST:event_Respond_MailActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Mail_Selector;
    private javax.swing.JButton New_Mail;
    private javax.swing.JButton Open_Mail;
    private javax.swing.JButton Quit;
    private javax.swing.JButton Respond_Mail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
